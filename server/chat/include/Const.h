#pragma once
#include <functional>

enum ErrorCodes
{
	Success = 0,
	Error_Json = 1001,	   // Json????????
	RPCFailed = 1002,	   // RPC???????
	VarifyExpired = 1003,  // ????????
	VarifyCodeErr = 1004,  // ????????
	UserExist = 1005,	   // ??????????
	PasswdErr = 1006,	   // ???????
	EmailNotMatch = 1007,  // ???????
	PasswdUpFailed = 1008, // ???????????
	PasswdInvalid = 1009,  // ??????????
	TokenInvalid = 1010,   // Token?
	UidInvalid = 1011,	   // uid??
};

// Defer??
class Defer
{
public:
	// ???????lambda???????????????
	Defer(std::function<void()> func) : func_(func) {}

	// ???????????????????
	~Defer()
	{
		func_();
	}

private:
	std::function<void()> func_;
};

#define PACKAGE_MAX_LENGTH 1024 * 2
// ????????
#define PACKAGE_TOTAL_LEN 4
// ???id????
#define PACKAGE_ID_LEN 2
// ??????????
#define PACKAGE_DATA_LEN 2
#define MAX_RECV_QUEUE_LEN 10000
#define MAX_SEND_QUEUE_LEN 1000

enum ServiceId
{
	IP_PING_PONG_REQ = 1003,			// ??????????Ping????
	IP_PING_PONG_RSP = 1004,			// ??????????Pong???
	ID_CHAT_LOGIN_INIT = 1005,			// ??????
	ID_CHAT_LOGIN_INIT_RSP = 1006,		// ?????????
	ID_SEARCH_USER_REQ = 1007,			// ???????????
	ID_SEARCH_USER_RSP = 1008,			// ??????????
	ID_ADD_FRIEND_REQ = 1009,			// ???????????????
	ID_ADD_FRIEND_RSP = 1010,			// ?????????????
	ID_NOTIFY_ADD_FRIEND_REQ = 1011,	// ????????????????
	ID_AUTH_FRIEND_REQ = 1013,			// ???????????
	ID_AUTH_FRIEND_RSP = 1014,			// ?????????
	ID_NOTIFY_AUTH_FRIEND_REQ = 1015,	// ????????????????
	ID_TEXT_CHAT_MSG_REQ = 1017,		// ??????????????
	ID_TEXT_CHAT_MSG_RSP = 1018,		// ?????????????
	ID_NOTIFY_TEXT_CHAT_MSG_REQ = 1019, // ???????????????

};

// Redis?????

#define PREFIX_REDIS_UIP "uip_"
#define PREFIX_REDIS_USER_TOKEN "utoken_"
#define PREFIX_REDIS_IP_COUNT "ipcount_"
#define PREFIX_REDIS_USER_INFO "ubaseinfo_"
#define PREFIX_REDIS_USER_ACTIVE_COUNT "logincount"
#define PREFIX_REDIS_NAME_INFO "nameinfo_"